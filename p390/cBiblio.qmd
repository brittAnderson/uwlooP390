# Knowledge Management 

This section deals with the issue of how you keep track of the information you discover and how you mine it for new ideas, associations, and connections. In this section we will consider the notion of the *zettlekasten* and some modern tools for emulating this technique. 

For many contemporary adherents to the zettlekasten system their pole star is [Niklas Luhman](https://en.wikipedia.org/wiki/Niklas_Luhmann) a social systems theorist who was an prolific publisher and who credited much of his fecundity to this technique. Essentially, the method is one of cross-referenced index cards, and historical precedents are easy to find. 

Although there are different flavors to this "slip box" approach the consistent theme is that one reflect on their reading, summarize it, and connect it to other works and concepts in their data base. We can perhaps do this more easily [^digitising-better].

[^digitising-better]: It is a question whether the enhanced digital ease impacts effectiveness since key to the practice is the reading and re-reading of "cards" in the index. 


## ([Zettlekasten](https://en.wikipedia.org/wiki/Zettelkasten))

  1. [Org-roam](https://github.com/org-roam/org-roam)
  
  Org-roam is a tool for use within the Emacs ecosystem. Emacs is, to paraphrase the old joke, an operating system managing as a text editor. [Emacs](https://www.gnu.org/software/emacs/) comes with a suite of functions (`org-mode`) built in that facilitate outlining and note taking (and many more things besides). [Org-roam](https://www.orgroam.com/) is an additional piece of software designed to interact with the Emacs/Orgmode combination to implement many zettlekasten features. It is an emulation, in Emacs, of [RoamResearch](https://roamresearch.com/) a self-described tool for networked thought. 
  
  The [online manual](https://roamresearch.com/) for org-roam provides a brief introduction and overview of the tool. Very, perhaps too, briefly you use various key commands to create nodes in your network and link them to others. You include notes on entries in your bibliographic system, or free standing notes organized around particular concepts. These links can be viewed both forward (things they link to) or backward (things that link to them), and there are also graphical views. A brief demonstration of some of these tools will be provided in class. 
  
  2. [Dendron](https://github.com/dendronhq/dendron) - works with VS Code
  
  This note-taking knowledge management tool is included here because it can interact well with the VS Code and Markdown approach we have been learning about through our use of Quarto. 
  
  One of the common features you will find for all these tools is the paring back of dependencies. Most rely on some sort of plain text system at their base. This means you can always just read your entries even if the fancy link and processing features break or prove unwieldy. This generally future proofs your "cards" and also often means that things can work faster and more robustly because there are fewer dependencies. 
  
  3. [Obsidian](https://obsidian.md/)

  Obsidian is another very popular offering in the same space as the above. This one however will cost you money. I include it here because of its wide popularity. The overview page of the website provides a good general visual orientation to the offerings and features. 

::: {.callout-tip title="Classroom Exercise"}

Taking Dendron for a test drive. 

1. Install Dendron from the VS Code Marketplace. 
2. Fill out the survey and any extensions you want (I took all the recommended) and proceed to the tutorial.
3. This should like quite familiar to your. The `qmd` files we have been writing are really just augmented versions of this `md` format. 
4. Use the terminal to figure out what directory your notes are being stored in. 
5. Use Ctrl-L to create a new note then navigate back to the tutorial.
6. The authors keep talking about `vim`. Look up what `vim` is. Do you have `vim` or its more difficult cousin `vi` on your computer? Try to open one or the other in a terminal. 
7. How do you creat a note hierarchy?
8. View the tree mode.
9. Use the Command Palette to view all the Dendron related commands, and at least read the next steps. 
 
:::

## Reference Management 

In this section we will look at tools for two important functions related to references for the papers we write and the research we do. How do we find the details for references that we may need to cite, and how do we ease the task of writing so that our references and citations are properly formatted and easy to update when we need to change the citation format for a manuscript. 

### Finding Citations

- [Semantic Scholar](https://www.semanticscholar.org/)

  This tool is supposed to help you find related papers. I have not found it all that helpful in my daily use. Do any of you have success stories to share?
- [OpenAlex](https://openalex.org/)
  Try finding my articles here, and see if you can find out what my opinion on *attention* is.

- [Google Scholar](https://scholar.google.ca/)

  See if you can find any research articles on Albert Einstein's brain by Dr. Sandra Witelson of McMaster University. What I like about this tool is that you can also search for articles that cite particular articles. How many of the articles that cite Dr. Witelson also contain the word myelin?

- [Consensus](https://consensus.app/)

  This is a new AI Driven search engine. It has some very nice features, but do be careful. Ask it what it thinks about me and category theory. Then look at the references. It is mixing me up with other researchers. 

- [Undermind](https://www.undermind.ai/home/)

  I think this is a very nice new addition to the search environent, but your free use is very limited. In the paid version you can easily identify articles that seem central to a field of research. 

  Sign up and try your free search. 

### More on Citation Management

As the web as grown as the principal compendium of scientific articles the community has had to deal with the facts that URLs (website addresses) change. How do we avoid dead links when searching for literature? At the moment, our best tool is to refer to the `doi`.

What does doi stand for?

Find the article with the doi: 10.1371/journal.pone.0152353

There are many tools for this, but a convenient look up is provided by [Crossref](https://www.crossref.org/).


If you keep your own reference database, you will often find that locating the doi is the easiest way to get that reference saved to your database. 

The same problem that occurs for uniquely specifiying research articles can also occur for uniquely specifiying researchers. There is more than Britt Anderson out there. How would a reader know if I am the one who wrote a particular article?

What is an [orcid](https://orcid.org/)? 

After you know what one is. Get yourself one if you do **not** already have one. 

### The last thing you want to do ...

when managing references is to be cut and pasting them into your own home grown document. You want to use a piece of software that can easily keep the data updated and correct, and facilitate you easiliy being able to correctly cite and correctly format your references when you write. Again, there are many tools, but [zotero](https://www.zotero.org/) has withstood the test of time and is a free offering well supported by academic libraries world wide. 

Zotero is a piece of software, and for this section you ought ot download it and find a few articles on the web, in google scholar, or arxiv that you can install in your database to have a few test articles to work with. The [support page](https://www.zotero.org/support/) will give you links to a quick start guide. There are many ways you can use zotero with tools you have used before (e.g. linking it to a word document), but in a moment we will explore a couple of ways to use it with the Quarto document writing system. 

Since we don't want to have to manually format all our citations and references, and then reformat them when we are forced to by needing to resubmit to a new journal we want to rely on the computer to fix such things for us. One contemporary tool that can make that easier is [csl](https://citationstyles.org/). A *csl* file is a file that specifies all the necessary details about how references should be formatted for a particular citation style. Since you will most often be working with apa see if you can find and download the proper csl file [https://www.zotero.org/styles](https://www.zotero.org/styles), and then at least one other csl type so you can practice how easy it is to switch from one style to another. 


## Using References With Quatro and VS Code 

Since you will, at least for this course, be writing Qmd files you may want to use Zotero for reference management and connect [it to Quarto](https://quarto.org/docs/visual-editor/technical.html#citations-from-zotero\). You will find details under the citation section of this webpage. In addition you will see how doi's, crossref, and other tools can be used to cite while you write in quarto. This [workshop](https://nmfs-opensci.github.io/Quarto-Workshop-2024/tutorials/tutorial-6.html) also provides details on citation management in Quarto as well as RStudio. See if you can write a minimal stub of an article and try some of the citation managment features in VS Code and Quarto. 

## Using References With Overleaf
VS Code is not your only option. Overleaf also use ".bib" files to hold references, though some of the other syntax is different. We have seen this before. Zotero will offer you the option to export references to a bib file which you can then use directly or if you need to submit a `.bib` file for a manuscript. 

In addition you can link [Overleaf and Zotero](https://www.overleaf.com/learn/how-to/How_to_link_your_Overleaf_account_to_Mendeley_and_Zotero) to make your writing easier. 

