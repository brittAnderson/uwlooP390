## Writing Scientific Documents

Writing scientific documents is more than writing papers. It can also include posters, websites, books, and all of these may require images, graphs, references, formuals, and even code. We will take a look here at some of the tools that can help with this, and later we will look in more detail at some of the options. 

## IDEs and Writing up your Research

::: {.callout-tip title="Class Question"}
What does IDE stand for and what are examples of IDEs?
:::

### VSCode

There are many powerful IDEs available. It will be useful for you to try more than one. However, at this moment in time the clear winner of the [IDE popularity](https://survey.stackoverflow.co/2023/#most-popular-technologies-new-collab-tools) contest is Microsoft's Visual Studio Code.

Since I want you to learn to use your computer as a tool, and to continue to be able to do so when tooling changes, you need to be able to:

1.  Locate code/programs on the internet
2.  Download and install that program to your computer
3.  Locate the help to begin to use the tool without formal instruction.

:::{.callout-tip title="In-class Exercise"} 
Locate, download, install, and verify you can start VS Code.

:::

### Some helpful links to get you started

- [Basics Video](https://code.visualstudio.com/docs/introvideos/basics)
- [Using VSCode with Python](https://code.visualstudio.com/docs/languages/python)
- [Using VSCode with R](https://code.visualstudio.com/docs/languages/r)
- [Text Editor Page from Quarto Site](https://quarto.org/docs/tools/text-editors.html)
  - What is "pip"? And why will you need to know?

Additional material about VS Code and its use as an IDE will be found in this [section](cCode.qmd#vscode)
quit
### Overleaf

VS Code is far from your only option. For technical writing and collaboration many scientists rely on [Overleaf](https://www.overleaf.com). 

Nature will [let you submit your manuscript](https://www.nature.com/srep/author-instructions/submission-guidelines\) from an Overleaf template.

You always have choices. You can  even [write LaTeX with Quarto](https://github.com/James-Yu/LaTeX-Workshop?tab=readme-ov-file\) ([see also](https://mark-wang.com/blog/2022/latex/)). 

::: {.callout-tip title="Classroom Discussion"}
What is [single source](https://coko.foundation/articles/single-source-publishing.html) publishing? How does this idea impact your preference for tools like Overleaf and Quarto?

:::

### RStudio

[RStudio](https://posit.co/downloads/) is a popular IDE for writing R code. R is a programming language particularly useful for statistical analyses. While initially RStudio was only for the R language the number of programming languages it currently supports has grown. It still is not as widely useful as VS Code, and many of RStudio's features are designed for the interactive evaluation of data, and so it has less of the cutting edge features that software developers expect in their code tools. Whether you want to use RStudio or not will depend in part on your planned activity. 

## Scientific Publishing Tools

To understand the plethora of contemporary tooling available to facilitate writing you should know generally what is meant by a mark-up language. This will help you evaluate whether it makes sense for you to switch from a word processiing program, like Word for Windows, to a more general tool like VS Code or [emacs](https://www.gnu.org/software/emacs/).

Some of the available options you should be familar with are

- LaTeX
  - [LaTeX](https://www.latex-project.org/)
   This was the standard for several decades, and used more by mathematicians than others, but today it seems limited in that it produces mostly pdfs, and many people also want their files to export to html (webpages)
- [A guide to LaTex for Word Users (pdf)](https://ctan.math.washington.edu/tex-archive/info/latex4wp/latex4wp.pdf)
- The descendants of [markdown](https://en.wikipedia.org/wiki/Markdown)
- Quarto/Qmd
  -   [Quarto](https://quarto.org/) (we will skip Rmd and since we are using its successor qmd. Both are related to the people who wrote RStudio,`knitr`, and are now known as [Posit](https://posit.co/)).
- Org Mode
  - [Org Mode](https://orgmode.org/) works particularly well with Emacs and allows you to embed code from multiple languages. 

## Things You Can Do With Quarto

Here are some of the helper links for things we can do with Quarto:

- [journal formats](https://quarto.org/docs/journals/) try the Elsevier format for this course. A lot of psych journals are Elsevier owned.
- [presentation](https://jjallaire.quarto.pub/reproducible-manuscripts-with-quarto/#/title-slide)
- [Talking to databases](https://danielroelfs.com/blog/sql-notebooks-with-quarto/).
- [Make a website/blog for your work or lab](https://beamilz.com/posts/2022-06-05-creating-a-blog-with-quarto/en/)
- [And more ...](https://github.com/mcanouil/awesome-quarto?tab=readme-ov-file)

### Making a Website with Quarto and Github Pages 

As science progressively moves to online communication there is a need to have a place to show case your work and share ideas. One way to do this is with a personal website structured around your scientific interests and activities. While there are many methods, tools, and hosts for this I will focus on sharing how you can use the Quarto publishing tool. 

#### Hosting
To have a website viewable by the world it must be hosted on a server that is viewable by the world. For example, it cannot be behind an institutional firewall (as are most of the computers at the University of Waterloo). And if you host on a University or Company server you have the potential of being limited in what you can share, how often you can update, or you may be required to adhere to certain styles and formats mandated by the institution's brand. One way to avoid this is to find an external hosting site. A modest fee would allow you to have a virtual server in the cloud, but the example we will use here to get you started is a free service available to those with Github accounts: [Github Pages](https://pages.github.com/). 

##### Testing Github Pages
Assuming you have an account you should be able to create a minimal webpage in a few steps. 

1. Go to personal dashboard and create a new repo as instructed on the Github Pages website. The repo must be named <username>.github.io. 
2. Use terminal to clone this repo to your local computer. 
3. cd into the correct directory using your terminal (inside VS Code is fine). And using the *terminal* do `echo "hello world" > index.html.
4. Do the usual add, commit, and push and verify your web site works at <username.github.io>.

You now have a website!

#### Blog Project in Quarto
The advantage of managing your blog (or website) in Quarto is that you get to take advantage of all the markdown language features. This is much more convenient than writing in html directly. You can also embed code and output just as you have been doing when you export your R code to html. 

There are several ways that the Quarto people recommend getting the material to and from github. The one that I found most convenient (that is the one that I got working with the least amount of swearing) was to configure a project that exports to a `docs` directory. 

**Creating the blog project in Quarto.**

1. In the `terminal` move to the directory with your repo. 
2. Create a branch called `gh-pages`.
	  1. You can find the steps for creating this branch at [blog](https://sweep.sh/posts/2024-06-14-how-i-made-this-blog-again/), but for the later steps he uses the publish option where we will output to `docs`.
	  2. Make sure everything is committed or stashed before you begin then:

```sh 
git checkout --orphan gh-pages
git reset --hard
git commit --allow-empty -m "Initializing gh-pages branch"
```
::: {.callout-caution}

If you are going to try the "publish" option you will not want to edit in the `gh-pages` branch. That branch will just be used for publishing your content. However, when using the `docs` approach, as I am illustrating, it is fine to just work on the `gh-pages` branch directly. For the `docs` method to work properly you must go into your settings for this repository on Github and find the Pages area. Then make you set the branch correctly and point it to the `docs/` directory.

:::



3. Add the following to your .gitignore:
   ```sh 
   /.quarto/
   /_site/
   ```
   If you don't have such a file, create it. If you don't know what a .gitignore file is ask!

4. Now we use the quarto command in the terminal to initiate our website as a project. This creates the basic structure we need. We can later change or adapt it. 

```sh 
quarto create project blog .
``` 

When I did this it asked me for a title and then it asked to open everything in vs code. Then you will want to edit the `_quarto.yml` file to direct the output to the `docs/` directory. The top of you file should look like 

```yml

project:
  output-dir: docs/
  type: website

website:
  title: "brittAnderson.github.io"
...

```

5. Try `quarto preview` to see the current skeleton. 
6. Explore the files to see what you can change. Try the about page for a starter. Can you add a picture of yourself, and make it say your name?
7. Try adding a post.
   First study the structure of the existing posts. You will need to emulate this in order for things to track correctly. 
8. Then publish `quarto render`
   This command will compile the html versions of your qmd code and direct them to the correct places. Then if you have set up thing correctly you can use the git features within VS Code to commit and push your changes. After a few minutes they should be available via your github link. 
9. My files are at [Britt's Github Example](https://github.com/brittAnderson/brittAnderson.github.io/) and the demo is at [brittanderson.github.io](https://brittanderson.github.io).
   

### Journal Article Authoring

::: {.callout-tip title="Classroom Exercise and HW"}

Write an article with quarto/qmd and using any of the linked article formats. Each has instructions on their use. Your article should look similar to your overleaf submission. All the components of an article, at least one figure, and at least one reference. Instead of using an image from the web try to include either your R or Python code for the figure you liked.

:::

I find this easier to do from a terminal. 

```sh
#| eval: false

quarto use template quarto-journals/elsevier
```

This will result in several questions for you to answer. When you are done you have starter versions of all the pieces you will need to get going. 

### Presentations 
Presentations are a standard component of professional life. Despite that importance the materials are often developed in a casual way that does not give the best impact to the material. There are many more versatile tools than contemporary Power Point. Though power point can make an effective presentation its default use does not typically achieve that goal. Quarto provides easy access to two other presentation tools that will expand one's recognition of what an effective presentation tool can do. 

#### Reveal.JS
[Reveal.js](https://revealjs.com/) is a javascript library for the creating presentations that work as well on the web as they do in person. Quarto also [supports](https://quarto.org/docs/presentations/revealjs/) Reveal.js.

#### Beamer
[Beamer](https://ctan.org/pkg/beamer) is a package for LaTeX that allows professional quality typesetting. It is particularly relevant for presentations that have a lot of mathematical material, though it is quite capable of supporting any general presentation as well. It is less flexible for the web since it produces PDFs. These can be shared on the web, but they require the intermediate step of downloading them rather than just playing them. Beamer also has a "Poster" variant that can be used to make high quality academic posters. 

Overleaf has a beginners [tutorial](https://www.overleaf.com/learn/latex/Beamer_Presentations%3A_A_Tutorial_for_Beginners_(Part_1)%E2%80%94Getting_Started). Quarto also [supports](https://quarto.org/docs/presentations/beamer.html) Beamer. 

#### Academic Posters
[Typest](https://github.com/quarto-ext/typst-templates/tree/main/poster)